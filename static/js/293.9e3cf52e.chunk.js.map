{"version":3,"file":"static/js/293.9e3cf52e.chunk.js","mappings":"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","sources":["../node_modules/@swisscom/sdx/dist/js/webcomponents/esm/webcomponents/examples/filter/filter-example-small.tsx"],"sourcesContent":["import { Component, h, State } from \"@stencil/core\"\n\ntype FilterOption = {\n  value: string\n  label: string\n  name?: string // for input fields\n}\n\n@Component({\n  tag: \"sdx-filter-example-small\",\n})\nexport class FilterExampleSmall {\n  // all selected options of all the filters\n  @State() private selection: string[] = []\n\n  @State() private category: FilterOption[] = [\n    { value: \"airpodcases\", label: \"Airpod cases\" },\n    { value: \"cover\", label: \"Cover\" },\n    { value: \"headphones\", label: \"Headphones\" },\n    { value: \"charging-cable\", label: \"Charging cable\" },\n  ]\n\n  @State() private smartphone: FilterOption[] = [\n    { value: \"iphone14\", label: \"iPhone 14\" },\n    { value: \"iphone13\", label: \"iPhone 13\" },\n    { value: \"iphonese\", label: \"iPhone SE\" },\n    { value: \"iphone11promax\", label: \"iPhone 11 Pro Max\" },\n    { value: \"galaxy3\", label: \"Samsung Galaxy S3\" },\n    { value: \"galaxy9\", label: \"Samsung Galaxy S9\" },\n    { value: \"lumia925\", label: \"Nokia Lumia 925\" },\n    { value: \"huaweiP9\", label: \"Huawei P9\" },\n    { value: \"huaweiP9plus\", label: \"Huawei P9 Plus\" },\n    { value: \"lg5\", label: \"LG G5\" },\n  ]\n\n  @State() private color: FilterOption[] = [\n    { value: \"blue\", label: \"Blue\" },\n    { value: \"brown\", label: \"Brown\" },\n    { value: \"green\", label: \"Green\" },\n    { value: \"orange\", label: \"Orange\" },\n    { value: \"pink\", label: \"Pink\" },\n    { value: \"red\", label: \"Red\" },\n    { value: \"silver\", label: \"Silver\" },\n    { value: \"violet\", label: \"Violet\" },\n    { value: \"yellow\", label: \"Yellow\" },\n  ]\n\n  private removeFromSelection(label: string) {\n    this.selection = this.selection.filter((item) => item !== label)\n  }\n\n  private updateSelectionMultiple(\n    model: FilterOption[],\n    selectedOptions: FilterOption[]\n  ) {\n    model.forEach((option) => {\n      const shouldBeSelected = selectedOptions.find(\n        (s) => s.label === option.label\n      )\n      const isAlreadySelected = this.selection.includes(option.label)\n\n      if (!shouldBeSelected) {\n        this.removeFromSelection(option.label)\n      } else if (!isAlreadySelected) {\n        this.selection = [...this.selection, option.label]\n      }\n    })\n  }\n\n  public render() {\n    return (\n      <sdx-filter\n        selection={this.selection}\n        onSdxdeselectrequest={(e) => {\n          if (e.detail?.label === e.target.resetAllFiltersLabel) {\n            this.selection = []\n          } else {\n            this.removeFromSelection(e.detail.label)\n          }\n        }}\n      >\n        <div class=\"row row--gutters\">\n          <div class=\"col-sm-auto\">\n            <sdx-select\n              multiple\n              label=\"Category\"\n              onInput={(e) => {\n                this.updateSelectionMultiple(\n                  this.category,\n                  (e.target as HTMLSdxSelectElement).value\n                )\n              }}\n            >\n              {this.category.map((item) => (\n                <sdx-select-option\n                  value={item}\n                  selected={this.selection.includes(item.label)}\n                >\n                  {item.label}\n                </sdx-select-option>\n              ))}\n            </sdx-select>\n          </div>\n\n          <div class=\"col-sm-auto\">\n            <sdx-select\n              multiple\n              label=\"Model\"\n              onInput={(e) => {\n                this.updateSelectionMultiple(\n                  this.smartphone,\n                  (e.target as HTMLSdxSelectElement).value\n                )\n              }}\n            >\n              {this.smartphone.map((item) => (\n                <sdx-select-option\n                  value={item}\n                  selected={this.selection.includes(item.label)}\n                >\n                  {item.label}\n                </sdx-select-option>\n              ))}\n            </sdx-select>\n          </div>\n\n          <div class=\"col-sm-auto\">\n            <sdx-select\n              multiple\n              label=\"Colours\"\n              onInput={(e) => {\n                this.updateSelectionMultiple(\n                  this.color,\n                  (e.target as HTMLSdxSelectElement).value\n                )\n              }}\n            >\n              {this.color.map((item) => (\n                <sdx-select-option\n                  value={item}\n                  selected={this.selection.includes(item.label)}\n                >\n                  <span\n                    style={{\n                      background: item.value,\n                      height: \"16px\",\n                      width: \"16px\",\n                      borderRadius: \"50%\",\n                      display: \"inline-block\",\n                      position: \"relative\",\n                      top: \"2px\",\n                      left: \"-3px\",\n                    }}\n                  />{\" \"}\n                  {item.label}\n                </sdx-select-option>\n              ))}\n            </sdx-select>\n          </div>\n        </div>\n      </sdx-filter>\n    )\n  }\n}\n"],"names":["FilterExampleSmall","value","label","this","selection","filter","item","model","selectedOptions","forEach","option","shouldBeSelected","find","s","isAlreadySelected","includes","removeFromSelection","h","onSdxdeselectrequest","e","detail","_a","target","resetAllFiltersLabel","class","multiple","onInput","updateSelectionMultiple","category","map","selected","smartphone","color","style","background","height","width","borderRadius","display","position","top","left"],"sourceRoot":""}