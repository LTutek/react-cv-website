{"version":3,"file":"static/js/457.ae739d05.chunk.js","mappings":"iQAKgBA,EAAOC,EAAWC,GAChC,OAAKD,EAAKE,SAASD,GAIZD,EAHL,kBAAWA,GAAX,CAAiBC,I,SAWLE,EAAUH,EAAWC,GACnC,OAAID,EAAKE,SAASD,GACTD,EAAKI,QAAO,SAACC,GAAD,OAAiBA,IAAgBJ,KAG/CD,E,SASOM,EAAUN,EAAWC,GACnC,OAAKD,EAAKE,SAASD,GAIZE,EAAOH,EAAMC,GAHXF,EAAIC,EAAMC,G,SAYLM,EACdC,EACAC,GAEA,IAAIC,EAAkC,GAEtC,IAAK,IAAMC,KAAOH,EAChBE,GAAS,kBAAKA,GAAWD,EAAGE,EAAKH,EAAIG,KAGvC,OAAOD,I,oGC/BIE,EAAiE,WAEtE,IADNC,EACM,uDADE,GACRC,EAAM,uCAEN,OAAQA,EAAOC,MACb,IAAK,eACH,yBACKF,GADL,IAEEG,UAAUjB,EAAAA,EAAAA,GAAIc,EAAMG,SAAUF,EAAOG,WAGzC,IAAK,kBACH,yBACKJ,GADL,IAEEG,UAAUb,EAAAA,EAAAA,GAAOU,EAAMG,SAAUF,EAAOG,WAG5C,QACE,OAAOJ,I,SAIGK,IACd,MAAO,CACLC,QAAS,SACTC,UAAW,eACXd,OAAQ,kBAAMe,QAAQC,WACtBC,eAAWC,EACXC,2BAA2B,EAC3BC,cAAUF,EACVR,SAAU,M,wJCjCDW,EAAa,WAaxB,+B,2CAF6D,OAG3DC,KAAKC,MAAQ,IAAIC,EAAAA,EACfF,KACAhB,EAAAA,GACAM,EAAAA,EAAAA,KACA,CAAC,cAlBmB,gDAsBjB,WAELU,KAAKC,MAAME,IAAI,YAAaH,KAAKI,IAG7BJ,KAAKX,SACPW,KAAKC,MAAMI,SAAS,CAClBlB,KAAM,eACNE,QAASW,KAAKX,YA9BI,kCAmCjB,WAIDW,KAAKX,SACPW,KAAKC,MAAMI,SAAS,CAClBlB,KAAM,kBACNE,QAASW,KAAKX,UAKlBW,KAAKC,MAAME,IAAI,iBAAaP,KA/CN,8BAkDjB,WAELI,KAAKC,MAAMI,SAAS,CAClBlB,KAAM,eACNE,QAASW,KAAKX,UAGhBW,KAAKC,MAAMK,cAzDW,+BA4DhB,WACN,yBACGN,KAAKO,MAAO,IACVC,EAAAA,EAAAA,GAAiBR,KAAKf,MAAMwB,MAAMjB,cA/DjB,oBAmEjB,WAAM,WACX,OACEkB,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CAACC,MAAOZ,KAAKa,sBAChBH,EAAAA,EAAAA,GAAAA,MAAAA,CAAKE,MAAM,cACTF,EAAAA,EAAAA,GAAAA,MAAAA,CAAKE,MAAM,QAAQE,IAAK,SAACV,GAAD,OAAS,EAAKf,QAAUe,MAEhDM,EAAAA,EAAAA,GAAAA,MAAAA,CAAKE,MAAM,SACTF,EAAAA,EAAAA,GAAAA,OAAAA,WA1Ec,yB,wBAAA,K,QCtBD","sources":["../node_modules/@swisscom/sdx/dist/js/webcomponents/esm/webcomponents/core/helpers/immutability-helpers.ts","../node_modules/@swisscom/sdx/dist/js/webcomponents/esm/webcomponents/components/menu-flyout/menu-flyout-store.ts","../node_modules/@swisscom/sdx/dist/js/webcomponents/esm/webcomponents/components/menu-flyout/menu-flyout-cta_deprecated/menu-flyout-cta.tsx","../node_modules/@swisscom/sdx/dist/js/webcomponents/esm/webcomponents/components/menu-flyout/menu-flyout-cta_deprecated/menu-flyout-cta.scss?tag=sdx-menu-flyout-cta&encapsulation=shadow"],"sourcesContent":["/**\n * Adds an item to a list, if it does not exist, yet.\n * @param list The array that might contain the given item.\n * @param item The element that should be added.\n */\nexport function add<I>(list: I[], item: I): I[] {\n  if (!list.includes(item)) {\n    return [...list, item]\n  }\n\n  return list\n}\n\n/**\n * Removes an item from a list, if it exists.\n * @param list The array that might contain the given item.\n * @param item The element that should be removed.\n */\nexport function remove<I>(list: I[], item: I): I[] {\n  if (list.includes(item)) {\n    return list.filter((currentItem) => currentItem !== item)\n  }\n\n  return list\n}\n\n/**\n * Adds an item to a list, if it does not exist, yet.\n * If it does exist, however, it removes it.\n * @param list The array that might contain the given item.\n * @param item The element that should be added or removed.\n */\nexport function toggle<I>(list: I[], item: I): I[] {\n  if (!list.includes(item)) {\n    return add(list, item)\n  }\n\n  return remove(list, item)\n}\n\n/**\n * Like Array map() but for objects.\n * Example: { foo: \"bar\" } => { foo1: \"bar1\" }\n * @param obj Object to iterate.\n * @param cb Callback that transforms key and value.\n */\nexport function objectMap(\n  obj: Record<string, unknown> | undefined,\n  cb: (key: string, value: unknown) => Record<string, unknown>\n): Record<string, unknown> {\n  let newObj: Record<string, unknown> = {}\n\n  for (const key in obj) {\n    newObj = { ...newObj, ...cb(key, obj[key]) }\n  }\n\n  return newObj\n}\n","import { Reducer } from \"redux\"\nimport { Direction } from \"./types\"\nimport { Display } from \"../../core/types/types\"\nimport { add, remove } from \"../../core/helpers/immutability-helpers\"\n\nexport interface MenuFlyoutState {\n  display: Display\n  direction: Direction\n  toggle: () => Promise<void>\n  arrowEls: HTMLElement[]\n  userInteractionInProgress: boolean\n  contentEl?: HTMLSdxMenuFlyoutListElement | HTMLSdxMenuFlyoutCtaElement\n  toggleEl?: HTMLSdxMenuFlyoutToggleElement\n}\n\nexport type MenuFlyoutActions =\n  | {\n      type: \"ADD_ARROW_EL\"\n      arrowEl: HTMLElement\n    }\n  | {\n      type: \"REMOVE_ARROW_EL\"\n      arrowEl: HTMLElement\n    }\n\nexport const menuFlyoutReducer: Reducer<MenuFlyoutState, MenuFlyoutActions> = (\n  state = {} as MenuFlyoutState,\n  action\n): MenuFlyoutState => {\n  switch (action.type) {\n    case \"ADD_ARROW_EL\":\n      return {\n        ...state,\n        arrowEls: add(state.arrowEls, action.arrowEl),\n      }\n\n    case \"REMOVE_ARROW_EL\":\n      return {\n        ...state,\n        arrowEls: remove(state.arrowEls, action.arrowEl),\n      }\n\n    default:\n      return state\n  }\n}\n\nexport function getInitialState(): MenuFlyoutState {\n  return {\n    display: \"closed\",\n    direction: \"bottom-right\",\n    toggle: () => Promise.resolve(),\n    contentEl: undefined,\n    userInteractionInProgress: false,\n    toggleEl: undefined,\n    arrowEls: [],\n  }\n}\n","// WARNING\n// This component has been deprecated in favor of <sdx-menu-flyout-content />.\n// Do not make change in this file - it only exists for backwards compatibility.\n\nimport { Component, h, Prop, State, Element, Host } from \"@stencil/core\"\nimport {\n  menuFlyoutReducer,\n  getInitialState,\n  MenuFlyoutState,\n  MenuFlyoutActions,\n} from \"../menu-flyout-store\"\nimport {\n  StoreConnection,\n  StateHandle,\n  computedProperty,\n} from \"../../../core/helpers/webcomponent-helpers\"\n\n@Component({\n  tag: \"sdx-menu-flyout-cta\",\n  styleUrl: \"menu-flyout-cta.scss\",\n  shadow: true,\n})\nexport class MenuFlyoutCta {\n  private store: StoreConnection<this, MenuFlyoutState, MenuFlyoutActions>\n  private arrowEl?: HTMLElement\n\n  @Element() public el!: HTMLSdxMenuFlyoutListElement\n\n  @State() public state!: StateHandle<MenuFlyoutState>\n\n  /**\n   * Width of the flyout. If none is set, the Flyout grows dynamically (up to a certain point) based on the content.\n   */\n  @Prop() public size: \"small\" | \"medium\" | \"large\" | \"auto\" = \"auto\"\n\n  constructor() {\n    this.store = new StoreConnection(\n      this,\n      menuFlyoutReducer,\n      getInitialState(),\n      [\"direction\"]\n    )\n  }\n\n  public connectedCallback() {\n    // Register self\n    this.store.set(\"contentEl\", this.el)\n\n    // Re-register arrow el (but only if already rendered)\n    if (this.arrowEl) {\n      this.store.dispatch({\n        type: \"ADD_ARROW_EL\",\n        arrowEl: this.arrowEl,\n      })\n    }\n  }\n\n  public disconnectedCallback() {\n    // Unregister arrow el (but only if already rendered)\n    // If a component is created and appended in direct succession (like with\n    // Angular's ng-content), disconnectedCallback() is called before render()\n    if (this.arrowEl) {\n      this.store.dispatch({\n        type: \"REMOVE_ARROW_EL\",\n        arrowEl: this.arrowEl,\n      })\n    }\n\n    // Unregister self\n    this.store.set(\"contentEl\", undefined)\n  }\n\n  public componentDidLoad() {\n    // Register arrow el\n    this.store.dispatch({\n      type: \"ADD_ARROW_EL\",\n      arrowEl: this.arrowEl!,\n    })\n\n    this.store.subscribe()\n  }\n\n  private getHostClassNames() {\n    return {\n      [this.size]: true,\n      ...computedProperty(this.state.get().direction),\n    }\n  }\n\n  public render() {\n    return (\n      <Host class={this.getHostClassNames()}>\n        <div class=\"component\">\n          <div class=\"arrow\" ref={(el) => (this.arrowEl = el)}></div>\n\n          <div class=\"body\">\n            <slot />\n          </div>\n        </div>\n      </Host>\n    )\n  }\n}\n","// WARNING\n// This component has been deprecated in favor of <menu-flyout-content />.\n// Do not make change in this file - it only exists for backwards compatibility.\n\n@import \"../arrow\";\n\n$width-small: 254px;\n$width-medium: 480px;\n$width-large: 850px;\n\n:host {\n  display: none; // initially closed\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: $zindex-menu;\n  box-shadow: 0 0 4px 0 rgba($color-black, 0.2);\n  min-width: $width-small;\n  max-width: $width-large;\n\n  > .component {\n    > .body {\n      position: relative;\n      background-color: $color-white;\n      padding: 12px 24px;\n      transition: border-bottom 200ms $button-easing, color 200ms $button-easing;\n    }\n  }\n}\n\n:host(:not(:last-of-type)) {\n  > .component {\n    > .body {\n      border-bottom: 1px solid $color-aluminum-tint-2;\n    }\n  }\n}\n\n:host(.bottom-right),\n:host(.bottom-left) {\n  > .component {\n    > .arrow {\n      display: block;\n      top: -($arrow-width * 0.5);\n      box-shadow: -1px -1px 2px 0 rgba($color-black, 0.15);\n    }\n  }\n}\n\n:host(.top-right),\n:host(.top-left) {\n  > .component {\n    > .arrow {\n      display: block;\n      bottom: -($arrow-width * 0.5);\n      box-shadow: 1px 1px 2px 0 rgba($color-black, 0.15);\n    }\n  }\n}\n\n:host(.bottom-left),\n:host(.top-left) {\n  > .component {\n    > .arrow {\n      right: $arrow-offset;\n    }\n  }\n}\n\n:host(.bottom-right),\n:host(.top-right) {\n  > .component {\n    > .arrow {\n      left: $arrow-offset;\n    }\n  }\n}\n\n:host(.small) {\n  > .component {\n    > .body {\n      width: $width-small;\n    }\n  }\n}\n\n:host(.medium) {\n  > .component {\n    > .body {\n      width: $width-medium;\n    }\n  }\n}\n\n:host(.large) {\n  > .component {\n    > .body {\n      width: $width-large;\n    }\n  }\n}\n"],"names":["add","list","item","includes","remove","filter","currentItem","toggle","objectMap","obj","cb","newObj","key","menuFlyoutReducer","state","action","type","arrowEls","arrowEl","getInitialState","display","direction","Promise","resolve","contentEl","undefined","userInteractionInProgress","toggleEl","MenuFlyoutCta","this","store","StoreConnection","set","el","dispatch","subscribe","size","computedProperty","get","h","Host","class","getHostClassNames","ref"],"sourceRoot":""}