{"version":3,"file":"static/js/756.7e3291a2.chunk.js","mappings":"gOAWaA,EAAK,W,6DAQ6B,O,aAErB,E,kBACK,E,uBACM,I,6BAZnB,4CAoBT,WACLC,KAAKC,QAAQD,KAAKE,GAAIF,KAAKG,OAAS,WAAa,aArBnC,gCAyBT,WACLH,KAAKC,QACHD,KAAKI,iBACLJ,KAAKK,YAAc,YAAc,cA5BrB,8BAgCT,WACLL,KAAKC,QAAQD,KAAKE,GAAIF,KAAKG,OAAS,WAAa,WAEjDH,KAAKC,QACHD,KAAKI,iBACLJ,KAAKK,YAAc,YAAc,cArCrB,qBAyCR,SACNH,EACAI,GAEA,OAAQA,GACN,IAAK,UACHC,EAAAA,EAAAA,IAAcL,EAAI,CAAEM,QAAS,QAASC,QAAS,IAE/CF,EAAAA,EAAAA,MAAgB,CACdG,QAASR,EACTO,QAAS,EACTE,SAAUX,KAAKY,oBAGjB,MAEF,IAAK,WACHL,EAAAA,EAAAA,IAAcL,EAAI,CAAEO,QAAS,IAE7BF,EAAAA,EAAAA,MAAgB,CACdG,QAASR,EACTO,QAAS,EACTE,SAAUX,KAAKY,kBACfC,SAAU,kBAAMN,EAAAA,EAAAA,IAAcL,EAAI,CAAEM,QAAS,YAG/C,MAEF,IAAK,WACHD,EAAAA,EAAAA,IAAcL,EAAI,CAAEY,MAAO,IAE3BP,EAAAA,EAAAA,MAAgB,CACdG,QAASR,EACTY,MAAO,EACPH,SAAUX,KAAKY,oBAGjB,MAEF,IAAK,YACHL,EAAAA,EAAAA,IAAcL,EAAI,CAAEY,MAAO,IAE3BP,EAAAA,EAAAA,MAAgB,CACdG,QAASR,EACTY,MAAO,EACPH,SAAUX,KAAKY,uBAtFP,oCAgGR,WAAsB,MAC5B,UACEG,WAAW,IADb,SAEGf,KAAKgB,WAAY,IAFpB,UAGGC,EAAAA,EAAAA,GAAcjB,KAAKE,KAAM,GAH5B,IAjGc,qCAwGR,WACN,MAAO,CACLgB,YAAY,EACZ,uBAAwBlB,KAAKmB,oBA3GjB,oBA+GT,WAAM,WACLC,EAAapB,KAAKmB,iBACpB,CAAEE,IAAK,GAAF,OAAKrB,KAAKmB,iBAAV,YACLG,EAEJ,OACEC,EAAAA,EAAAA,GAAAA,MAAAA,CAAKC,MAAOxB,KAAKyB,2BACfF,EAAAA,EAAAA,GAAAA,MAAAA,CACEC,MAAOxB,KAAK0B,0BACZC,IAAK,SAACzB,GAAD,OAAS,EAAKE,iBAAmBF,KAEtCqB,EAAAA,EAAAA,GAAAA,MAAAA,CAAKC,MAAM,QAAQI,MAAOR,QA1HlB,yB,uBAAA,gC,wEAAA,K,QCXD","sources":["../node_modules/@swisscom/sdx/dist/js/webcomponents/esm/webcomponents/components/arrow/arrow.tsx","../node_modules/@swisscom/sdx/dist/js/webcomponents/esm/webcomponents/components/arrow/arrow.scss?tag=sdx-arrow&encapsulation=shadow"],"sourcesContent":["import { Component, h, Element, Prop, Watch } from \"@stencil/core\"\nimport {\n  animation,\n  getAppearance,\n} from \"../../core/helpers/webcomponent-helpers\"\n\n@Component({\n  tag: \"sdx-arrow\",\n  styleUrl: \"arrow.scss\",\n  shadow: true,\n})\nexport class Arrow {\n  private arrowContainerEl?: HTMLDivElement\n\n  @Element() public el!: HTMLSdxArrowElement\n\n  /**\n   * Which side it looks towards.\n   */\n  @Prop() public direction: \"left\" | \"right\" = \"left\"\n\n  @Prop() public hidden = false\n  @Prop() public arrowHidden = false\n  @Prop() public animationDuration = 200\n\n  /**\n   * The top position in px of the arrows (needed in sdx-progress-full).\n   */\n  @Prop() public arrowPositionTop?: number\n\n  @Watch(\"hidden\")\n  public hiddenChanged() {\n    this.animate(this.el, this.hidden ? \"fade-out\" : \"fade-in\")\n  }\n\n  @Watch(\"arrowHidden\")\n  public arrowHiddenChanged() {\n    this.animate(\n      this.arrowContainerEl!,\n      this.arrowHidden ? \"scale-out\" : \"scale-in\"\n    )\n  }\n\n  public componentDidLoad() {\n    this.animate(this.el, this.hidden ? \"fade-out\" : \"fade-in\")\n\n    this.animate(\n      this.arrowContainerEl!,\n      this.arrowHidden ? \"scale-out\" : \"scale-in\"\n    )\n  }\n\n  private animate(\n    el: HTMLElement,\n    effect: \"fade-in\" | \"fade-out\" | \"scale-in\" | \"scale-out\"\n  ): void {\n    switch (effect) {\n      case \"fade-in\":\n        animation.set(el, { display: \"block\", opacity: 0 })\n\n        animation.start({\n          targets: el,\n          opacity: 1,\n          duration: this.animationDuration,\n        })\n\n        break\n\n      case \"fade-out\":\n        animation.set(el, { opacity: 1 })\n\n        animation.start({\n          targets: el,\n          opacity: 0,\n          duration: this.animationDuration,\n          complete: () => animation.set(el, { display: \"none\" }),\n        })\n\n        break\n\n      case \"scale-in\":\n        animation.set(el, { scale: 0 })\n\n        animation.start({\n          targets: el,\n          scale: 1,\n          duration: this.animationDuration,\n        })\n\n        break\n\n      case \"scale-out\":\n        animation.set(el, { scale: 1 })\n\n        animation.start({\n          targets: el,\n          scale: 0,\n          duration: this.animationDuration,\n        })\n\n        break\n\n      default:\n        break\n    }\n  }\n\n  private getComponentClassNames() {\n    return {\n      component: true,\n      [this.direction]: true,\n      [getAppearance(this.el)]: true,\n    }\n  }\n\n  private getBackgroundClassNames() {\n    return {\n      background: true,\n      \"arrow-position-top\": !!this.arrowPositionTop,\n    }\n  }\n\n  public render() {\n    const arrowStyle = this.arrowPositionTop\n      ? { top: `${this.arrowPositionTop}px` }\n      : undefined\n\n    return (\n      <div class={this.getComponentClassNames()}>\n        <div\n          class={this.getBackgroundClassNames()}\n          ref={(el) => (this.arrowContainerEl = el)}\n        >\n          <div class=\"arrow\" style={arrowStyle} />\n        </div>\n      </div>\n    )\n  }\n}\n","$gradient: rgb(white, 0) 0%, rgb(white, 0.4) 25.16%, rgb(white, 0.73) 57.81%,\n  rgb(white, 1) 100%;\n\n$gradient-dark-theme: rgb(#141414, 0) 0%, rgb(#141414, 0.4) 25.16%,\n  rgb(#141414, 0.73) 57.81%, rgb(#141414, 1) 100%; // $color-dusk-dark-theme\n\n:host {\n  display: flex;\n  width: 100%;\n  height: 100%;\n}\n\n.component {\n  cursor: pointer;\n  height: inherit;\n  display: flex;\n  flex: 1;\n\n  &:hover {\n    .background .arrow {\n      @include arrow($color-int-blue--active);\n    }\n  }\n\n  &.left {\n    justify-content: flex-start;\n    background: linear-gradient(to left, $gradient);\n\n    .background {\n      transform-origin: left;\n      left: 2px;\n\n      .arrow {\n        @include arrow--left;\n      }\n    }\n  }\n\n  &.right {\n    justify-content: flex-end;\n    background: linear-gradient(to right, $gradient);\n\n    .background {\n      transform-origin: right;\n      right: 2px;\n\n      .arrow {\n        @include arrow--right;\n      }\n    }\n  }\n\n  .background {\n    width: 10px;\n    position: relative;\n\n    &:not(.arrow-position-top) {\n      display: flex;\n      align-items: center;\n    }\n\n    .arrow {\n      @include arrow($color-int-blue);\n      top: -3px; // Fine adjustment\n    }\n  }\n}\n\n.component.sdx--dark-theme {\n  &:hover {\n    .background .arrow {\n      background: $color-int-blue2-dark-theme--active;\n    }\n  }\n\n  &.left {\n    background: linear-gradient(to left, $gradient-dark-theme);\n  }\n\n  &.right {\n    background: linear-gradient(to right, $gradient-dark-theme);\n  }\n\n  .background .arrow {\n    background: $color-int-blue2-dark-theme;\n  }\n}\n"],"names":["Arrow","this","animate","el","hidden","arrowContainerEl","arrowHidden","effect","animation","display","opacity","targets","duration","animationDuration","complete","scale","component","direction","getAppearance","background","arrowPositionTop","arrowStyle","top","undefined","h","class","getComponentClassNames","getBackgroundClassNames","ref","style"],"sourceRoot":""}