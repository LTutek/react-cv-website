{"version":3,"file":"static/js/674.75655064.chunk.js","mappings":"yOAYaA,EAAK,W,0DAMgB,E,YAKA,G,UAKU,E,YAMV,GAtBhB,iDA2BR,WACN,IAAMC,EAASC,KAAKC,IAAIC,KAAKH,SAAW,EACxC,MAAO,UAAGC,KAAKG,MAAe,IAATJ,IAClBK,QAAQ,MAAO,OACfA,QAAQ,QAAS,OACjBA,QAAQ,QAAS,OACjBA,QAAQ,eAAgB,YAjCb,uBAoCR,WACN,OAAOF,KAAKH,SAAWC,KAAKK,MAAMH,KAAKH,UArCzB,uBAwCR,WAAS,WACf,GAAIG,KAAKI,OACP,OAAOJ,KAAKI,OAGR,IAAAA,EAAS,GAAT,EACiBJ,KAAKK,qBAAqBC,MAAM,KADjD,eACHC,EADG,KACKC,EADL,KAEJC,EAAYC,OAAOH,GAAU,EAC7BI,EAAcD,OAAOF,GAAY,EACjCI,EAAO,SAACC,GAAD,OAAkBC,EAAAA,EAAAA,GAAUD,EAAM,EAAKE,GAAGC,OACjDC,EAASjB,KAAKiB,OACXf,QAAQ,IAAK,IACbA,QAAQ,gCAAiCU,EAAK,UACjDI,EAAOhB,KAAKe,GAAGC,MAAQE,SAASC,gBAAgBH,MAAQ,KAoB1D,OAlBIP,GAAcE,GAChBP,EAAOgB,KAAKb,EAAQK,EAAK,WAEvBD,IACE,SAASU,KAAKL,IAChBZ,EAAOgB,KAAKR,EAAK,QAGnBR,EAAOgB,KAAKZ,GAEPC,GACHL,EAAOgB,KAAKR,EAAK,cAGjBK,GACFb,EAAOgB,KAAKR,EAAK,OAAQK,GAGpBb,EAAOkB,KAAK,OAzEL,0BA4ER,WACN,MAAkB,SAAdtB,KAAKuB,KACA,OAET,eAAevB,KAAKuB,KAAO,EAAI,IAAM,KAArC,QACGvB,KAAKuB,KAAO,EAAI,EAAI,GAAKvB,KAAKuB,KAAO,KAjF1B,oCAqFR,WAAsB,MAC5B,UACEC,WAAW,EACXC,QAASzB,KAAK0B,cAFhB,SAGG1B,KAAK2B,gBAAiB,IAHzB,UAIGC,EAAAA,EAAAA,GAAc5B,KAAKe,KAAM,GAJ5B,IAtFc,oBA8FT,WACL,MAAO,EACLc,EAAAA,EAAAA,GAAAA,OAAAA,CAAMC,MAAO9B,KAAK+B,yBAAwB,cAAc,QACrD/B,KAAKK,sBACNwB,EAAAA,EAAAA,GAAAA,OAAAA,CAAMC,MAAM,UAAU9B,KAAKiB,UAE7BY,EAAAA,EAAAA,GAAAA,OAAAA,CAAMC,MAAM,WAAW9B,KAAKgC,gBApGhB,yB,wBAAA,K,QCZD","sources":["../node_modules/@swisscom/sdx/dist/js/webcomponents/esm/webcomponents/components/price/price.tsx","../node_modules/@swisscom/sdx/dist/js/webcomponents/esm/webcomponents/components/price/price.scss?tag=sdx-price&encapsulation=shadow"],"sourcesContent":["import { Component, Element, h, Prop } from \"@stencil/core\"\nimport { PriceSize } from \"./types\"\nimport {\n  getAppearance,\n  translate,\n} from \"../../core/helpers/webcomponent-helpers\"\n\n@Component({\n  tag: \"sdx-price\",\n  styleUrl: \"price.scss\",\n  shadow: true,\n})\nexport class Price {\n  @Element() public el!: HTMLSdxPriceElement\n\n  /**\n   * The amount to be paid.\n   */\n  @Prop() public amount: number = 0\n\n  /**\n   * Time period, for example \"/mo.\".\n   */\n  @Prop() public period: string = \"\"\n\n  /**\n   * The font size. Use `auto` to inherit font properties from parent.\n   */\n  @Prop() public size: PriceSize | \"auto\" = 2\n\n  /**\n   * Description text read by the screen reader.\n   * Leave empty for auto-generated text, i.e. \"5 francs 50 per month\".\n   */\n  @Prop() public srHint: string = \"\"\n\n  /**\n   * Formats a price like 5.–, 5.50, –.50, or 0.–\n   */\n  private getFormattedAmount() {\n    const amount = Math.abs(this.amount) || 0 // -10 -> 10 and NaN -> 0\n    return `${Math.round(amount * 100)}` // 10.1 -> 1010\n      .replace(/^0$/, \"000\") // 0 -> 000\n      .replace(/^(.)$/, \"0$1\") // 5 -> 05\n      .replace(/(..)$/, \".$1\") // 1010 -> 10.10\n      .replace(/00$|^(?=[.])/, \"–\") // 10.00 -> 10.– and .10 -> –.10\n  }\n\n  private isInteger() {\n    return this.amount === Math.floor(this.amount)\n  }\n\n  private getSrHint() {\n    if (this.srHint) {\n      return this.srHint\n    }\n\n    const srHint = [],\n      [francs, centimes] = this.getFormattedAmount().split(\".\"),\n      hasFrancs = Number(francs) > 0,\n      hasCentimes = Number(centimes) > 0,\n      i18n = (text: string) => translate(text, this.el.lang),\n      period = this.period\n        .replace(\"/\", \"\")\n        .replace(/(Monat|Mt|mois|mese|mth)[.]?/i, i18n(\"Month\")),\n      lang = this.el.lang || document.documentElement.lang || \"en\"\n\n    if (hasFrancs || !hasCentimes) {\n      srHint.push(francs, i18n(\"francs\"))\n    }\n    if (hasCentimes) {\n      if (/fr|it/i.test(lang)) {\n        srHint.push(i18n(\"and\"))\n      }\n\n      srHint.push(centimes)\n\n      if (!hasFrancs) {\n        srHint.push(i18n(\"centimes\"))\n      }\n    }\n    if (period) {\n      srHint.push(i18n(\"per\"), period)\n    }\n\n    return srHint.join(\" \")\n  }\n\n  private getFontClass() {\n    if (this.size === \"auto\") {\n      return \"auto\"\n    }\n    return `text-${this.size > 6 ? \"d\" : \"h\"}${\n      (this.size > 6 ? 9 : 6) - this.size + 1\n    }`\n  }\n\n  private getComponentClassNames() {\n    return {\n      component: true,\n      integer: this.isInteger(),\n      [this.getFontClass()]: true,\n      [getAppearance(this.el)]: true,\n    }\n  }\n\n  public render() {\n    return [\n      <span class={this.getComponentClassNames()} aria-hidden=\"true\">\n        {this.getFormattedAmount()}\n        <span class=\"period\">{this.period}</span>\n      </span>,\n      <span class=\"sr-only\">{this.getSrHint()}</span>,\n    ]\n  }\n}\n","@import \"stylesheets/sdx/typography/typography\";\n@import \"stylesheets/sdx/utilities/screenreaders\";\n\n.text-d1,\n.text-d2,\n.text-d3,\n.text-h1 {\n  // for example \"/Mt.\"\n  .period {\n    font-size: 50%;\n    letter-spacing: 0;\n  }\n  &:not(.integer) {\n    .period {\n      line-height: 1;\n    }\n  }\n\n  // display the period above the ndash\n  &.integer {\n    .period {\n      font-size: 26%;\n      position: absolute;\n      margin-left: -2em;\n      margin-top: -0.8em;\n    }\n\n    &.text-d1,\n    &.text-d2,\n    &.text-d3 {\n      .period {\n        margin-top: 0.55em;\n      }\n    }\n  }\n}\n\n// save some space\n.text-d1,\n.text-d2,\n.text-d3 {\n  line-height: 1;\n}\n"],"names":["Price","amount","Math","abs","this","round","replace","floor","srHint","getFormattedAmount","split","francs","centimes","hasFrancs","Number","hasCentimes","i18n","text","translate","el","lang","period","document","documentElement","push","test","join","size","component","integer","isInteger","getFontClass","getAppearance","h","class","getComponentClassNames","getSrHint"],"sourceRoot":""}